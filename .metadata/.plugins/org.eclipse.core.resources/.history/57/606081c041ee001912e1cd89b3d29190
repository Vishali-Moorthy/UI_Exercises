<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Equal Height Javascript</title>

<style type="text/css">
body {
	font-family: Arial, Helvetica, sans-serif;
	color: #636363;
	font-size: 12px;
}

#left_column {
	float: left;
	width: 180px;
	border: solid 1px #ccc;
	padding: 10px;
	margin: 0 20px 0 0;
}

#middle_column {
	float: left;
	width: 180px;
	border: solid 1px #ccc;
	padding: 20px;
}

#right_column {
	float: left;
	width: 180px;
	border: solid 1px #ccc;
	padding: 20px;
}
</style>



</head>

<body>
	<script>
		addLoadListener(equalHeight);

		function equalHeight() {

			var myLeftColumn = document.getElementById("left_column");
			var myMiddleColumn = document.getElementById("middle_column")
			var myRightColumn = document.getElementById("right_column");

			var myLeftHeight = myLeftColumn.offsetHeight;
			var myMiddleHeight = myMiddleColumn.offsetHeight;
			var myRightHeight = myRightColumn.offsetHeight;

			var myLeftBorderTopPixels = retrieveComputedStyle(myLeftColumn,
					"borderTopWidth");
			var myLeftBorderBottomPixels = retrieveComputedStyle(myLeftColumn,
					"borderBottomWidth");
			var myLeftPaddingTopPixels = retrieveComputedStyle(myLeftColumn,
					"paddingTop");
			var myLeftPaddingBottomPixels = retrieveComputedStyle(myLeftColumn,
					"paddingBottom");

			var myMiddleBorderTopPixels = retrieveComputedStyle(myMiddleColumn,
					"borderTopWidth");
			var myMiddleBorderBottomPixels = retrieveComputedStyle(
					myMiddleColumn, "borderBottomWidth");
			var myMiddlePaddingTopPixels = retrieveComputedStyle(
					myMiddleColumn, "paddingTop");
			var myMiddlePaddingBottomPixels = retrieveComputedStyle(
					myMiddleColumn, "paddingBottom");

			var myRightBorderTopPixels = retrieveComputedStyle(myRightColumn,
					"borderTopWidth");
			var myRightBorderBottomPixels = retrieveComputedStyle(
					myRightColumn, "borderBottomWidth");
			var myRightPaddingTopPixels = retrieveComputedStyle(myRightColumn,
					"paddingTop");
			var myRightPaddingBottomPixels = retrieveComputedStyle(
					myRightColumn, "paddingBottom");

			var myLeftBorderNumber = Number(myLeftBorderTopPixels.replace("px",
					""))
					+ Number(myLeftBorderBottomPixels.replace("px", ""));
			var myLeftPaddingNumber = Number(myLeftPaddingTopPixels.replace(
					"px", ""))
					+ Number(myLeftPaddingBottomPixels.replace("px", ""));
			var myLeftExtras = myLeftBorderNumber + myLeftPaddingNumber;

			var myRightBorderNumber = Number(myRightBorderTopPixels.replace(
					"px", ""))
					+ Number(myRightBorderBottomPixels.replace("px", ""));
			var myRightPaddingNumber = Number(myRightPaddingTopPixels.replace(
					"px", ""))
					+ Number(myRightPaddingBottomPixels.replace("px", ""));
			var myRightExtras = myRightBorderNumber + myRightPaddingNumber;

			if (myLeftHeight > myRightHeight) {
				myRightColumn.style.height = (myLeftHeight - myRightExtras)
						+ "px";
			}

			else {
				myLeftColumn.style.height = (myRightHeight - myLeftExtras)
						+ "px";
			}

		}

		function retrieveComputedStyle(element, styleProperty) {
			var computedStyle = null;

			if (typeof element.currentStyle != "undefined") {
				computedStyle = element.currentStyle;
			} else {
				computedStyle = document.defaultView.getComputedStyle(element,
						null);
			}
			return computedStyle[styleProperty];
		}

		function addLoadListener(fn) {
			if (typeof window.addEventListener != 'undefined') {
				window.addEventListener('load', fn, false);
			} else if (typeof document.addEventListener != 'undefined') {
				document.addEventListener('load', fn, false);
			} else if (typeof window.attachEvent != 'undefined') {
				window.attachEvent('onload', fn);
			} else {
				var oldfn = window.onload;
				if (typeof window.onload != 'function') {
					window.onload = fn;
				} else {
					window.onload = function() {
						oldfn();
						fn();
					};
				}
			}
		}
	</script>
	<h1>Equal Columns with JavaScript</h1>
	<div id="left_column">
		<p>Lorum ipsum text to fill up the left column. Lorum ipsum text
			to fill up the left column. Lorum ipsum text to fill up the left
			column. Lorum ipsum text to fill up the left column. Lorum ipsum text
			to fill up the left column. Lorum ipsum text to fill up the left
			column. Lorum ipsum text to fill up the left column. Lorum ipsum text
			to fill up the left column. Lorum ipsum text to fill up the left
			column. Lorum ipsum text to fill up the left column. Lorum ipsum text
			to fill up the left column. Lorum ipsum text to fill up the left
			column. Lorum ipsum text to fill up the left column. Lorum ipsum text
			to fill up the left column. Lorum ipsum text to fill up the left
			column. Lorum ipsum text to fill up the left column. Lorum ipsum text
			to fill up the left column. Lorum ipsum text to fill up the left
			column.</p>
	</div>
	<div id="middle_column">
		<p>Lorum ipsum text to fill up the left column. Lorum ipsum text
			to fill up the left column. Lorum ipsum text to fill up the left
			column. Lorum ipsum text to fill up the left column. Lorum ipsum text
			to fill up the left column. Lorum ipsum text to fill up the left
			column. Lorum ipsum text to fill up the left column. Lorum ipsum text
			to fill up the left column. Lorum ipsum text to fill up the left
			column.</p>
	</div>
	<div id="right_column">
		<p>Lorum ipsum text to fill up the right column. Lorum ipsum text
			to fill up the right column. Lorum ipsum text to fill up the right
			column. Lorum ipsum text to fill up the right column. Lorum ipsum
			text to fill up the right column. Lorum ipsum text to fill up the
			right column. Lorum ipsum text to fill up the right column.</p>
	</div>



</body>
</html>